[{"C:\\Users\\Henna\\Documents\\Projektit\\Fullstack\\osa1\\anekdootit\\src\\index.js":"1","C:\\Users\\Henna\\Documents\\Projektit\\Fullstack\\osa1\\anekdootit\\src\\App.js":"2"},{"size":122,"mtime":1612212445836,"results":"3","hashOfConfig":"4"},{"size":1429,"mtime":1612261521390,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"bosjfb",{"filePath":"9","messages":"10","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Users\\Henna\\Documents\\Projektit\\Fullstack\\osa1\\anekdootit\\src\\index.js",[],["12","13"],"C:\\Users\\Henna\\Documents\\Projektit\\Fullstack\\osa1\\anekdootit\\src\\App.js",["14"],"import React, { useState } from 'react'\n\nconst App = () => {\n  const anecdotes = [\n    'If it hurts, do it more often',\n    'Adding manpower to a late software project makes it later!',\n    'The first 90 percent of the code accounts for the first 90 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n    'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n    'Premature optimization is the root of all evil.',\n    'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.'\n  ]\n  \n  const [selected, setSelected] = useState(0)\n  var points = new Uint8Array(6)\n\n  const nextAnecdote = () => {\n    setSelected(Math.floor(Math.random() * 6))\n  }\n\n  const vote = (props) => {\n    const copy = [...points]\n    copy[props.point] += 1 \n  }\n\n  return (\n    <div>\n      <p>{anecdotes[selected]} <br />\n      has {points[anecdotes[selected]]} votes\n      </p>\n      <p>\n      <Button text={'vote'} handleClick={vote={point={points}}} />\n      <Button text={'next anecdote'} handleClick={nextAnecdote} />\n      </p>\n    </div>\n  )\n}\n\nconst Button = (props) => {\n  return (\n    <button onClick={props.handleClick}>\n      {props.text}\n    </button>\n  )\n}\n\n\nexport default App",{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":null,"fatal":true,"severity":2,"message":"19","line":31,"column":53},"no-native-reassign",["20"],"no-negated-in-lhs",["21"],"Parsing error: Unexpected token\n\n\u001b[0m \u001b[90m 29 | \u001b[39m      \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mp\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 30 | \u001b[39m      \u001b[33m<\u001b[39m\u001b[33mp\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 31 | \u001b[39m      \u001b[33m<\u001b[39m\u001b[33mButton\u001b[39m text\u001b[33m=\u001b[39m{\u001b[32m'vote'\u001b[39m} handleClick\u001b[33m=\u001b[39m{vote\u001b[33m=\u001b[39m{point\u001b[33m=\u001b[39m{points}}} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m                                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 32 | \u001b[39m      \u001b[33m<\u001b[39m\u001b[33mButton\u001b[39m text\u001b[33m=\u001b[39m{\u001b[32m'next anecdote'\u001b[39m} handleClick\u001b[33m=\u001b[39m{nextAnecdote} \u001b[33m/\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 33 | \u001b[39m      \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mp\u001b[39m\u001b[33m>\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 34 | \u001b[39m    \u001b[33m<\u001b[39m\u001b[33m/\u001b[39m\u001b[33mdiv\u001b[39m\u001b[33m>\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]